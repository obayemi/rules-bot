name: Docker
on:
  push:
    branches: [ master ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: registry.digitalocean.com/ikjpz
  IMAGE_NAME: rules-bot

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install doctl 
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        if: github.event_name != 'pull_request'
        run: doctl registry login --expiry-seconds 600

      - name: Log in to DOKS
        if: github.event_name != 'pull_request'
        run:  doctl kubernetes cluster config save ${{ secrets.DIGITALOCEAN_KUBE_CLUSTER_ID }}
        
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update variables
        if: github.event_name != 'pull_request'
        uses: dominicwatson/github-action-envsubst@v1
        with:
          files: kube/bot.yaml kube/db.yaml
          patterns: $IMAGE $DATABASE_URL $DISCORD_TOKEN $DISCORD_PREFIX $POSTGRES_PASSWORD $POSTGRES_REPLICATION_PASSWORD
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_REPLICATION_PASSWORD: ${{ secrets.POSTGRES_REPLICATION_PASSWORD }}
          DISCORD_PREFIX: ${{ secrets.DISCORD_PREFIX }}

      - name: Deploy
        if: github.event_name != 'pull_request'
        run: |
          kubectl apply -f kube/namespace.yaml
          kubectl apply -f kube/db.yaml
          kubectl apply -f kube/bot.yaml

      - name: Check
        if: github.event_name != 'pull_request'
        run: |
          kubectl rollout status deployment/rules-bot-deployment -n rules-bot
